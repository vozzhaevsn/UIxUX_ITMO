{"version":3,"file":"contrast-bundle.js","sources":["../core/contrast-core.js"],"sourcesContent":["// Кэш для ускорения расчетов\r\nconst contrastCache = new Map();\r\n\r\n// Конвертация цвета в RGB\r\nfunction parseColor(colorStr) {\r\n    if (colorStr.startsWith('#')) {\r\n        return hexToRgb(colorStr);\r\n    }\r\n\r\n    if (colorStr.startsWith('rgb')) {\r\n        const [r, g, b] = colorStr.match(/\\d+/g).map(Number);\r\n        return { r, g, b };\r\n    }\r\n\r\n    return { r: 0, g: 0, b: 0 }; // Fallback\r\n}\r\n\r\n// HEX в RGB\r\nfunction hexToRgb(hex) {\r\n    hex = hex.replace('#', '');\r\n    const r = parseInt(hex.substring(0, 2), 16);\r\n    const g = parseInt(hex.substring(2, 4), 16);\r\n    const b = parseInt(hex.substring(4, 6), 16);\r\n    return { r, g, b };\r\n}\r\n\r\n// Расчет относительной яркости (WCAG 2.1)\r\nfunction getLuminance(r, g, b) {\r\n    const sRGB = [r, g, b].map(c => {\r\n        c /= 255;\r\n        return c <= 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\r\n    });\r\n\r\n    return 0.2126 * sRGB[0] + 0.7152 * sRGB[1] + 0.0722 * sRGB[2];\r\n}\r\n\r\n// Расчет контрастности с кэшированием\r\nfunction getContrastRatio(color1, color2) {\r\n    const cacheKey = `${JSON.stringify(color1)}_${JSON.stringify(color2)}`;\r\n\r\n    if (contrastCache.has(cacheKey)) {\r\n        return contrastCache.get(cacheKey);\r\n    }\r\n\r\n    const lum1 = getLuminance(...Object.values(color1)) + 0.05;\r\n    const lum2 = getLuminance(...Object.values(color2)) + 0.05;\r\n    const ratio = Math.max(lum1, lum2) / Math.min(lum1, lum2);\r\n\r\n    contrastCache.set(cacheKey, ratio);\r\n    return ratio;\r\n}\r\n\r\n// Глобальный кэш элементов\r\nlet elementCache = new WeakMap();\r\n\r\nexport async function scanPage() {\r\n    const startTime = performance.now();\r\n    const elements = getTextElements();\r\n    const results = {\r\n        url: location.href,\r\n        timestamp: new Date().toISOString(),\r\n        elements: [],\r\n        errors: []\r\n    };\r\n\r\n    // Асинхронная обработка с ограничением времени\r\n    for (const el of elements.slice(0, 1000)) {\r\n        if (performance.now() - startTime > 500) break; // Таймаут 500мс\r\n\r\n        const elementData = await processElement(el);\r\n        if (elementData) {\r\n            results.elements.push(elementData);\r\n            if (elementData.status === 'ERROR') {\r\n                results.errors.push(elementData);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Оптимизация: кэширование результатов\r\n    sessionStorage.setItem('lastScan', JSON.stringify(results));\r\n    return results;\r\n}\r\n\r\n// Получение текстовых элементов\r\nfunction getTextElements() {\r\n    const selectors = 'p, h1, h2, h3, h4, h5, h6, span, a, li, td, button, label';\r\n    return Array.from(document.querySelectorAll(selectors))\r\n        .filter(el => {\r\n            const text = el.textContent.trim();\r\n            return text.length > 0 && isVisible(el);\r\n        });\r\n}\r\n\r\n// Проверка видимости элемента\r\nfunction isVisible(el) {\r\n    return !!(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\r\n}\r\n\r\n// Обработка элемента\r\nasync function processElement(el) {\r\n    // Используем кэшированные данные при наличии\r\n    if (elementCache.has(el)) {\r\n        return elementCache.get(el);\r\n    }\r\n\r\n    const styles = getComputedStyle(el);\r\n    const textColor = parseColor(styles.color);\r\n    const bgColor = parseColor(getEffectiveBackground(el));\r\n\r\n    const contrast = getContrastRatio(textColor, bgColor);\r\n    const fontSize = parseFloat(styles.fontSize);\r\n    const isLarge = fontSize >= 18 || (styles.fontWeight === 'bold' && fontSize >= 14);\r\n    const required = isLarge ? 3 : 4.5;\r\n\r\n    const result = {\r\n        element: el.tagName,\r\n        selector: cssPath(el),\r\n        textColor: `rgb(${textColor.r},${textColor.g},${textColor.b})`,\r\n        bgColor: `rgb(${bgColor.r},${bgColor.g},${bgColor.b})`,\r\n        contrast: parseFloat(contrast.toFixed(2)),\r\n        required,\r\n        fontSize: `${fontSize}px`,\r\n        status: contrast >= required ? 'OK' : 'ERROR',\r\n        suggestion: contrast >= required ? '' : getColorSuggestion(textColor, bgColor)\r\n    };\r\n\r\n    elementCache.set(el, result);\r\n    return result;\r\n}\r\n\r\n// Поиск реального фона элемента\r\nfunction getEffectiveBackground(el) {\r\n    while (el) {\r\n        const bg = getComputedStyle(el).backgroundColor;\r\n        if (bg !== 'rgba(0, 0, 0, 0)') return bg;\r\n        el = el.parentElement;\r\n    }\r\n    return '#ffffff'; // Fallback\r\n}\r\n\r\n// Генерация CSS-пути\r\nfunction cssPath(el) {\r\n    const path = [];\r\n    while (el) {\r\n        let selector = el.tagName.toLowerCase();\r\n        if (el.id) {\r\n            selector += `#${el.id}`;\r\n            path.unshift(selector);\r\n            break;\r\n        } else {\r\n            let sib = el, nth = 1;\r\n            while (sib = sib.previousElementSibling) {\r\n                if (sib.tagName === el.tagName) nth++;\r\n            }\r\n            if (nth !== 1) selector += `:nth-of-type(${nth})`;\r\n        }\r\n        path.unshift(selector);\r\n        el = el.parentElement;\r\n    }\r\n    return path.join(' > ');\r\n}\r\n\r\n// Рекомендации по цветам\r\nfunction getColorSuggestion(textColor, bgColor) {\r\n    const targetLuminance = 0.05 + (getLuminance(...Object.values(bgColor)) * 4.5);\r\n    return `Измените цвет текста на ${targetLuminance > 0.5 ? 'темнее' : 'светлее'}`;\r\n}"],"names":["contrastCache","Map","parseColor","colorStr","startsWith","hex","replace","r","parseInt","substring","g","b","hexToRgb","match","map","Number","getLuminance","sRGB","c","Math","pow","elementCache","WeakMap","async","scanPage","startTime","performance","now","elements","selectors","Array","from","document","querySelectorAll","filter","el","textContent","trim","length","offsetWidth","offsetHeight","getClientRects","isVisible","getTextElements","results","url","location","href","timestamp","Date","toISOString","errors","slice","elementData","processElement","push","status","sessionStorage","setItem","JSON","stringify","has","get","styles","getComputedStyle","textColor","color","bgColor","bg","backgroundColor","parentElement","getEffectiveBackground","contrast","color1","color2","cacheKey","lum1","Object","values","lum2","ratio","max","min","set","getContrastRatio","fontSize","parseFloat","required","fontWeight","result","element","tagName","selector","cssPath","toFixed","suggestion","getColorSuggestion","path","toLowerCase","id","unshift","sib","nth","previousElementSibling","join"],"mappings":"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"}